{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","length","cat","alert","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","elm","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACFH,EAAc,IACdD,EAAWK,OAAS,EAAIP,GAAc,SAACQ,GAAD,OAAQN,GAAR,mBAAsBM,OAAQC,MAAM,wBAK1E,SACE,uBACEC,KAAK,OACLC,MAAOT,EACPU,SAhBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACqCC,UAAUH,GAD/C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAF,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDV,SAACA,GAAa,IAAD,EAEZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAmBtC,OAZAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAACC,GACnBC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAU,MAEf,UAGT,CAACpB,IAEIqB,EDhBuBM,CAAa3B,GAArCoB,EAF6B,EAE7BA,QAAcP,EAFe,EAErBN,KAEd,OACI,qCACI,6BAAKP,IACJoB,GAAW,2CACZ,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEkBxBiB,EA9BK,WAAK,IAAD,EAEgB1C,mBAAS,CAAC,cAF1B,mBAEb2C,EAFa,KAED5C,EAFC,KASpB,OACI,qCACA,gDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAACqB,GAAD,OACX,cAAC,EAAD,CAEI9B,SAAW8B,GADNA,Y,MClB7BC,IAASC,OAEL,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.f815f624.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes  from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setinputValue('');\r\n        inputValue.length > 2 ? setCategories((cat)=>[inputValue,...cat]) : alert('El campo esta vacio');\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input \r\n            type=\"text\" \r\n            value={inputValue} \r\n            onChange={handleInputChange}>\r\n          </input>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs= async(category)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=LwuinRM1Ji4ibvw4nUzueawCAXR3DNcI`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    //console.log(props)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const {loading,data: images} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading...</p>  }\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map(img => \r\n                        <GifGridItem \r\n                            key = {img.id} \r\n                            {...img}\r\n                        /> \r\n                        )\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect} from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const  useFetchGifs = (category) =>{\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n       getGifs(category).then((imgs)=>{\r\n            setTimeout(() => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading : false\r\n                }) \r\n            }, 3000);    \r\n\r\n       }) \r\n    },[category])\r\n\r\n    return state;\r\n}","import {  useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nconst GifExpertApp =()=>{\r\n   \r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    // const handleAdd = () =>{\r\n    //     const serie = \"Los caballeros del zodiaco\";\r\n        \r\n    //     setCategories([...categories, serie]);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n        <h2>Gif Expert APP</h2>\r\n        <AddCategory setCategories = { setCategories } />\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map((elm) => \r\n                    <GifGrid\r\n                        key={elm} \r\n                        category= {elm}\r\n                    />\r\n                )\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n//    <App />,\n    <GifExpertApp/>,\n   document.getElementById('root')\n);\n\n"],"sourceRoot":""}